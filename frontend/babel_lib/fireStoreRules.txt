rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users rules
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isOwner(userId) || isAdmin());
    }

    // Archive rules
    match /archive/{mediaId} {
      allow read: if true;
      allow list: if true;  // Allow listing for search functionality
      allow write: if isAuthenticated() && isAdmin();
    }

        // Collections rules
    match /collections/{collectionId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && isOwner(resource.data.userId);
    }
    
    // Collection items rules
    match /collections/{collectionId}/items/{itemId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isOwner(get(/databases/$(database)/documents/collections/$(collectionId)).data.userId);
		}
  }
}

